[Points]
number          = 15000;        // total number of points

[Peaks]
number          = 4;            // number of peaks to generate   
timeshift       = 500;          // parameter for exp_gaussian function
[0].amplitude   = 1.0;          // amplitude of peak 1 (a.u.)
[0].position    = 1511.0;       // position of peak 1 (nm)
[0].width       = 1.0;          // FWHM of peak 1 (nm)

[1].amplitude   = 0.8;          // amplitude of peak 2 (a.u.)
[1].position    = 1523.0;       // position of peak 2 (nm)
[1].width       = 1.0;          // FWHM of peak 2 (nm)

[2].amplitude   = 0.6;          // amplitude of peak 3 (a.u.)
[2].position    = 1536.0;       // position of peak 3 (nm)
[2].width       = 1.0;          // FWHM of peak 3 (nm)

[3].amplitude   = 0.4;          // amplitude of peak 4 (a.u.)
[3].position    = 1551.0;       // position of peak 4 (nm)
[3].width       = 1.0;          // FWHM of peak 4 (nm)

[Noise]
amplitude       = 0.15;         // noise amplitude (a.u.)
color           = 3;            // 0-random; 1-white; 2-brown; 3-violet; 4-pink (unfinished); 5-blue (unfinished) 

[Smooth]
width           = 100;          // smooth width (in points)
level           = 3;            // number of smooth operations to apply

[Search]
peaks.num       = 1;            // peak of interest (sensor) number to show on graph
threshold_slope = 0.000001;     // first derivative slope threshold
threshold_amp   = 0.35;         // signal's peak amplitude threshold
peaks.num.real  = 4;            // number of peaks to search
peaks.num.arr   = 10;           // maximal array size for peak searching

[Generation]
number          = 100;          // number of signal generations (mesurements in experiment)
frequency       = 50;            // frequency of mesurements

[Temperature]
apply           = 1;            // calculate temperature drift
tick            = 20;           // number of mesurements to change temperature
room            = 20;           // room temperature
max             = 1350;         // maximum temperature in experiment
coefficient     = 0.02;         // coefficient [nm/C]

[Plot]
x.min           = 1500;         // x window limit (left)
x.max           = 1600;         // x window limit (right)
y.min           = 0.0;          // y window limit (bottom)
y.max           = 1.4;          // y window limit (top)
show.signal                 = 1; // show plot of real generated signal
show.signal.smooth          = 0; // show plot of smoothed generated signal (add to the plot above)
show.signal.derivative      = 0; // show plot of fisrt derivative of generated signal
show.experiment.temperature = 0; // show plot of temperature change on sensors
show.experiment.smooth      = 0; // show plot of temperature vs smooth (1 - order, 2 - width)
show.experiment.noise       = 0; // show plot of temperature vs noise (SNR)

